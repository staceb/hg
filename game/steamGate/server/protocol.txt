
/////
// Calls made by end users:
/////


// will prompt user to log into steam, if no steam key has been assigned to 
// them yet

server.php
?action=get_steam_key
&ticket_id=[ID]



// will prompt user to log into steam
server.php
?action=show_download_link







/////
// Calls not made by end users:
/////



// called by steamGate client to map a game-owning Steam account to
// an email and ticket ID 


server.php
?action=get_account
&auth_session_ticket=[STEAM_TICKET]
&client_public_key=[KEY_HEX]


Returns:
server_public_key
email
encrypted_ticket_id


Where:

client_public_key  is the client's 32-byte curve25519 public key,
hex-encoded as a 64-character string.

server_public_key  is the server's 32-byte curve25519 public key,
hex-encoded as a 64-character string.

 

encrypted_ticket_id  is the ticket_id string, bytewise-XORed encrypted 
with the curve25519-derived shared secret key, and hex encoded.

Suppose the ticket_id is a 23-character string like:

H6BZ8-8XNLF-F5MSQ-B5XDQ

The ASCII byte representation of this string is XORed with the first 23 bytes
of the shared secret key, and the result is hex encoded into 46 ASCII 
characters.
